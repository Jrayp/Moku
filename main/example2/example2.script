local moku = require "moku.moku"


function init(self)

    -- Handle initial map and autotiling
    local tile_types = {
        WALL = 1,
        SLOW_ZONE = 17,
        FLOOR = 33
    }

    self.astar_map = moku.new_from_tilemap("astar_map#example2_tm", "layer1", 32, 32)

    moku.set_autotile(self.astar_map, tile_types.WALL, moku.at_algorithm.NO_CORNERS, true, true, true)
    moku.set_autotile(self.astar_map, tile_types.SLOW_ZONE, moku.at_algorithm.NO_CORNERS, true, true, true)

    moku.autotile_map(self.astar_map)

    msg.post(".", "acquire_input_focus")

    --moku.print_map(self.astar_map)

end

function on_input(self, action_id, action)
    -- if action_id == hash("left_click") then
    --     local tx, ty = moku.pick_cell(self.astar_map, 0, 0, action.screen_x, action.screen_y)
    --     self.astar_map[tx][ty] = self.astar_map.tile_types.WALL
    --     moku.autotile_surrounding(self.astar_map, tx, ty)
    --     self.path = moku.find_path(self.astar_map, 2, 14, 19, 2)
    -- elseif action_id == hash("ctrl") then
    --     local tx, ty = moku.pick_cell(self.astar_map, 0, 0, action.screen_x, action.screen_y)
    --     self.astar_map[tx][ty] = self.astar_map.tile_types.FLOOR
    --     tilemap.set_tile("astar_map#example2_tm", "layer1", tx, ty, self.astar_map.tile_types.FLOOR)
    --     moku.autotile_surrounding(self.astar_map, tx, ty)
    --     self.path = moku.find_path(self.astar_map, 2, 14, 19, 2)
    -- end
end

function update(self, dt)

    -- if self.path then
    --     for k, v in pairs(self.path) do
    --         local ex, ey = moku.cell_center(self.astar_map, 0, 0, v.x, v.y)
    --         local sx, sy = moku.cell_center(self.astar_map, 0, 0, v.px, v.py)
    --         local s = vmath.vector3(sx, sy, - 1)
    --         local e = vmath.vector3(ex, ey, - 1)
    --
    --         msg.post("@render:", "draw_line", { start_point = s, end_point = e, color = vmath.vector4(1, .3, 0, 0) } )
    --     end
    -- end

end
